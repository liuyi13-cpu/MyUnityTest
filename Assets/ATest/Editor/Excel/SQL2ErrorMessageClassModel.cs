using System.Collections.Generic;
using System.IO;
using System.Text;
using UnityEngine;

public class SQL2ErrorMessageClassModel
{
    const string CLASS_NAME = "DB_ERROR_MESSSAGE_CONST";

    Dictionary<string, DB_Error_message> textKey = new Dictionary<string, DB_Error_message>();

    public void Export()
    {
        LoadDB();
        CreateClass(JoinClass());
    }

    void LoadDB()
    {
        string path = Path.Combine(Application.persistentDataPath, "tk.db");
        DBHelper.Instance.OpenConnection(path);

        textKey = DBManager.GetStringKeyALL<DB_Error_message>();

        DBHelper.Instance.CloseConnection();
    }

    // 生成类
    void CreateClass(StringBuilder builder)
    {
        string OutDir = Application.dataPath + "/Scripts/DB/";

        if (!Directory.Exists(OutDir))
        {
            Directory.CreateDirectory(OutDir);
        }

        using (var fs = new FileStream(OutDir + CLASS_NAME + ".cs", FileMode.Create))
        {
            using (var sw = new StreamWriter(fs, Encoding.UTF8))
            {
                sw.Write(builder.ToString());
                sw.Flush();
                sw.Close();
            }
            fs.Close();
        }

        Debug.Log("导出" + CLASS_NAME + "完成");
    }

    // 拼接类
    StringBuilder JoinClass()
    {
        StringBuilder builder = new StringBuilder();

        builder.AppendLine("/// <summary>");
        builder.AppendLine("/// THIS SOURCE CODE WAS AUTO-GENERATED BY TOOL, DO NOT MODIFY IT!");
        builder.AppendLine("/// </summary>");
        builder.Append("public class ").AppendLine(CLASS_NAME);
        builder.AppendLine("{");

        foreach (var item in textKey)
        {
            builder.Append("\t").AppendLine("/// <summary>");
            builder.Append("\t/// ").AppendLine(item.Value.Notes);
            builder.Append("\t/// 显示类型:").AppendLine(item.Value.ShowType.ToString());
            builder.AppendLine("\t/// </summary>");
            builder.Append("\t").Append("public const int ").Append(item.Key).Append(" = ").Append(item.Value.Error_code.ToString()).AppendLine(";");
        }

        builder.AppendLine("}");

        return builder;
    }
}