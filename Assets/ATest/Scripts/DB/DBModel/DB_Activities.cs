using System.Collections.Generic; 

/// <summary>
/// THIS SOURCE CODE WAS AUTO-GENERATED BY TOOL, DO NOT MODIFY IT!
/// </summary>
public class DB_Activities : IDB_BaseInt
{
	const string SQL = @"select _index, id, comment, activity_type, unlocklevel, icon, title, picture, rule_name, rule_survey, rule_detail, daily_times, open_times, open_detail, open_ex, logo_txt01, logo_txt02, logo_txt03, logo_txt04, logo_picture from conf_activities";

	/// <summary>
	///序号
	/// </summary>
	public int _index { get; set; }
	/// <summary>
	///活动id
	/// </summary>
	public int Id { get; set; }
	/// <summary>
	///开发备注
	/// </summary>
	public string Comment { get; set; }
	/// <summary>
	///活动类型1=战争之路；2=竞技场；3=活动入口
	/// </summary>
	public int Activity_type { get; set; }
	/// <summary>
	///开放等级
	/// </summary>
	public int Unlocklevel { get; set; }
	/// <summary>
	///对应图标
	/// </summary>
	public int Icon { get; set; }
	/// <summary>
	///活动标题
	/// </summary>
	public string Title { get; set; }
	/// <summary>
	///使用图片（战争之路内活动图片）
	/// </summary>
	public int Picture { get; set; }
	/// <summary>
	///规则名称
	/// </summary>
	public string Rule_name { get; set; }
	/// <summary>
	///规则概述
	/// </summary>
	public string Rule_survey { get; set; }
	/// <summary>
	///规则详细
	/// </summary>
	public string Rule_detail { get; set; }
	/// <summary>
	///每日活动次数(-1 没有次数限制)
	/// </summary>
	public int Daily_times { get; set; }
	/// <summary>
	///开启时间（0视为一直开启，-1不开启）单位 每周
	/// </summary>
	public string Open_times { get; set; }
	/// <summary>
	///开启时间提示（如果有开启时间就需要填写字段说明）
	/// </summary>
	public string Open_detail { get; set; }
	/// <summary>
	///二级限制字段（-1视为没有二级限制字段）
	/// </summary>
	public string Open_ex { get; set; }
	/// <summary>
	///特殊提示框：黄字
	/// </summary>
	public string Logo_txt01 { get; set; }
	/// <summary>
	///说明1
	/// </summary>
	public string Logo_txt02 { get; set; }
	/// <summary>
	///说明2
	/// </summary>
	public string Logo_txt03 { get; set; }
	/// <summary>
	///说明3
	/// </summary>
	public string Logo_txt04 { get; set; }
	/// <summary>
	///配图
	/// </summary>
	public int Logo_picture { get; set; }

	static Dictionary<int, IDB_BaseInt> LoadDB()
	{
		Dictionary<int, IDB_BaseInt> tmp = new Dictionary<int, IDB_BaseInt>();
		DBHelper.Instance.Query(SQL, (reader) =>
		{
			if (reader == null) return;

			while (reader.Read())
			{
				DB_Activities module = new DB_Activities()
				{
					_index		 = reader.GetInt32(0),
					Id		 = reader.GetInt32(1),
					Comment		 = reader.GetString(2),
					Activity_type		 = reader.GetInt32(3),
					Unlocklevel		 = reader.GetInt32(4),
					Icon		 = reader.GetInt32(5),
					Title		 = reader.GetString(6),
					Picture		 = reader.GetInt32(7),
					Rule_name		 = reader.GetString(8),
					Rule_survey		 = reader.GetString(9),
					Rule_detail		 = reader.GetString(10),
					Daily_times		 = reader.GetInt32(11),
					Open_times		 = reader.GetString(12),
					Open_detail		 = reader.GetString(13),
					Open_ex		 = reader.GetString(14),
					Logo_txt01		 = reader.GetString(15),
					Logo_txt02		 = reader.GetString(16),
					Logo_txt03		 = reader.GetString(17),
					Logo_txt04		 = reader.GetString(18),
					Logo_picture		 = reader.GetInt32(19),
				};
				tmp.Add(module.Id, module);
			}
		});
		return tmp;
	}
}
