using System.Collections.Generic; 

/// <summary>
/// THIS SOURCE CODE WAS AUTO-GENERATED BY TOOL, DO NOT MODIFY IT!
/// </summary>
public class DB_Tank_build : IDB_BaseInt
{
	const string SQL = @"select _index, id, comment, cost1_type, cost1_id, cost1_min, cost1_max, cost2_type, cost2_id, cost2_min, cost2_max, cost3_type, cost3_id, cost3_min, cost3_max, cost4_type, cost4_id, cost4_min, cost4_max, build_model from conf_tank_build";

	/// <summary>
	///序号
	/// </summary>
	public int _index { get; set; }
	/// <summary>
	///制造id，1001=通常坦克建造，1002=重型坦克建造
	/// </summary>
	public int Id { get; set; }
	/// <summary>
	///开发备注
	/// </summary>
	public string Comment { get; set; }
	/// <summary>
	///消耗材料1类型，类型遵从服务器的类型设定
	/// </summary>
	public int Cost1_type { get; set; }
	/// <summary>
	///消耗材料1id
	/// </summary>
	public int Cost1_id { get; set; }
	/// <summary>
	///消耗材料1最小数量
	/// </summary>
	public int Cost1_min { get; set; }
	/// <summary>
	///消耗材料1最大数量
	/// </summary>
	public int Cost1_max { get; set; }
	/// <summary>
	///消耗材料2类型
	/// </summary>
	public int Cost2_type { get; set; }
	/// <summary>
	///消耗材料2id
	/// </summary>
	public int Cost2_id { get; set; }
	/// <summary>
	///消耗材料2最小数量
	/// </summary>
	public int Cost2_min { get; set; }
	/// <summary>
	///消耗材料2最大数量
	/// </summary>
	public int Cost2_max { get; set; }
	/// <summary>
	///消耗材料3类型
	/// </summary>
	public int Cost3_type { get; set; }
	/// <summary>
	///消耗材料3id
	/// </summary>
	public int Cost3_id { get; set; }
	/// <summary>
	///消耗材料3最小数量
	/// </summary>
	public int Cost3_min { get; set; }
	/// <summary>
	///消耗材料3最大数量
	/// </summary>
	public int Cost3_max { get; set; }
	/// <summary>
	///消耗材料4类型
	/// </summary>
	public int Cost4_type { get; set; }
	/// <summary>
	///消耗材料4id
	/// </summary>
	public int Cost4_id { get; set; }
	/// <summary>
	///消耗材料4最小数量
	/// </summary>
	public int Cost4_min { get; set; }
	/// <summary>
	///消耗材料4最大数量
	/// </summary>
	public int Cost4_max { get; set; }
	/// <summary>
	///模型指引
	/// </summary>
	public string Build_model { get; set; }

	static Dictionary<int, IDB_BaseInt> LoadDB()
	{
		Dictionary<int, IDB_BaseInt> tmp = new Dictionary<int, IDB_BaseInt>();
		DBHelper.Instance.Query(SQL, (reader) =>
		{
			if (reader == null) return;

			while (reader.Read())
			{
				DB_Tank_build module = new DB_Tank_build()
				{
					_index		 = reader.GetInt32(0),
					Id		 = reader.GetInt32(1),
					Comment		 = reader.GetString(2),
					Cost1_type		 = reader.GetInt32(3),
					Cost1_id		 = reader.GetInt32(4),
					Cost1_min		 = reader.GetInt32(5),
					Cost1_max		 = reader.GetInt32(6),
					Cost2_type		 = reader.GetInt32(7),
					Cost2_id		 = reader.GetInt32(8),
					Cost2_min		 = reader.GetInt32(9),
					Cost2_max		 = reader.GetInt32(10),
					Cost3_type		 = reader.GetInt32(11),
					Cost3_id		 = reader.GetInt32(12),
					Cost3_min		 = reader.GetInt32(13),
					Cost3_max		 = reader.GetInt32(14),
					Cost4_type		 = reader.GetInt32(15),
					Cost4_id		 = reader.GetInt32(16),
					Cost4_min		 = reader.GetInt32(17),
					Cost4_max		 = reader.GetInt32(18),
					Build_model		 = reader.GetString(19),
				};
				tmp.Add(module.Id, module);
			}
		});
		return tmp;
	}
}
