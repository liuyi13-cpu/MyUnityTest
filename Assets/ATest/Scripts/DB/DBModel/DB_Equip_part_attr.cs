using System.Collections.Generic; 

/// <summary>
/// THIS SOURCE CODE WAS AUTO-GENERATED BY TOOL, DO NOT MODIFY IT!
/// </summary>
public class DB_Equip_part_attr : IDB_BaseInt
{
	const string SQL = @"select _index, id, name, comment, rank, show, place, part, rare, health, attack, guard, pierce, puncture, add_attack, bang, hit, volt, deepening, shallowing, health_growth, attack_growth, guard_growth, pierce_growth, puncture_growth, add_atk_growth, bang_growth, hit_growth, volt_growth, deepen_growth, shallow_growth, lv_rule, strengthen_rule, change_id, resolve_rule, icon from conf_equip_part_attr";

	/// <summary>
	///序号
	/// </summary>
	public int _index { get; set; }
	/// <summary>
	///配件ID
	/// </summary>
	public int Id { get; set; }
	/// <summary>
	///配件名称
	/// </summary>
	public string Name { get; set; }
	/// <summary>
	///配件备注
	/// </summary>
	public string Comment { get; set; }
	/// <summary>
	///配件等级
	/// </summary>
	public int Rank { get; set; }
	/// <summary>
	///战车表现
	/// </summary>
	public int Show { get; set; }
	/// <summary>
	///装备位
	/// </summary>
	public int Place { get; set; }
	/// <summary>
	///配件类别
	/// </summary>
	public int Part { get; set; }
	/// <summary>
	///品质
	/// </summary>
	public int Rare { get; set; }
	/// <summary>
	///生命
	/// </summary>
	public float Health { get; set; }
	/// <summary>
	///攻击
	/// </summary>
	public float Attack { get; set; }
	/// <summary>
	///护甲
	/// </summary>
	public float Guard { get; set; }
	/// <summary>
	///穿甲
	/// </summary>
	public float Pierce { get; set; }
	/// <summary>
	///无视护甲
	/// </summary>
	public float Puncture { get; set; }
	/// <summary>
	///附加攻击
	/// </summary>
	public float Add_attack { get; set; }
	/// <summary>
	///暴击
	/// </summary>
	public float Bang { get; set; }
	/// <summary>
	///命中
	/// </summary>
	public float Hit { get; set; }
	/// <summary>
	///闪避
	/// </summary>
	public float Volt { get; set; }
	/// <summary>
	///伤害加深
	/// </summary>
	public float Deepening { get; set; }
	/// <summary>
	///伤害减免
	/// </summary>
	public float Shallowing { get; set; }
	/// <summary>
	///生命等级成长
	/// </summary>
	public float Health_growth { get; set; }
	/// <summary>
	///攻击等级成长
	/// </summary>
	public float Attack_growth { get; set; }
	/// <summary>
	///护甲等级成长
	/// </summary>
	public float Guard_growth { get; set; }
	/// <summary>
	///穿甲等级成长
	/// </summary>
	public float Pierce_growth { get; set; }
	/// <summary>
	///无视护甲等级成长
	/// </summary>
	public float Puncture_growth { get; set; }
	/// <summary>
	///附加攻击等级成长
	/// </summary>
	public float Add_atk_growth { get; set; }
	/// <summary>
	///暴击等级成长
	/// </summary>
	public float Bang_growth { get; set; }
	/// <summary>
	///命中等级成长
	/// </summary>
	public float Hit_growth { get; set; }
	/// <summary>
	///闪避等级成长
	/// </summary>
	public float Volt_growth { get; set; }
	/// <summary>
	///伤害加深等级成长
	/// </summary>
	public float Deepen_growth { get; set; }
	/// <summary>
	///伤害减免等级成长
	/// </summary>
	public float Shallow_growth { get; set; }
	/// <summary>
	///升级规则
	/// </summary>
	public int Lv_rule { get; set; }
	/// <summary>
	///强化规则
	/// </summary>
	public int Strengthen_rule { get; set; }
	/// <summary>
	///升星后ID
	/// </summary>
	public int Change_id { get; set; }
	/// <summary>
	///分解规则
	/// </summary>
	public int Resolve_rule { get; set; }
	/// <summary>
	///图标
	/// </summary>
	public int Icon { get; set; }

	static Dictionary<int, IDB_BaseInt> LoadDB()
	{
		Dictionary<int, IDB_BaseInt> tmp = new Dictionary<int, IDB_BaseInt>();
		DBHelper.Instance.Query(SQL, (reader) =>
		{
			if (reader == null) return;

			while (reader.Read())
			{
				DB_Equip_part_attr module = new DB_Equip_part_attr()
				{
					_index		 = reader.GetInt32(0),
					Id		 = reader.GetInt32(1),
					Name		 = reader.GetString(2),
					Comment		 = reader.GetString(3),
					Rank		 = reader.GetInt32(4),
					Show		 = reader.GetInt32(5),
					Place		 = reader.GetInt32(6),
					Part		 = reader.GetInt32(7),
					Rare		 = reader.GetInt32(8),
					Health		 = reader.GetFloat(9),
					Attack		 = reader.GetFloat(10),
					Guard		 = reader.GetFloat(11),
					Pierce		 = reader.GetFloat(12),
					Puncture		 = reader.GetFloat(13),
					Add_attack		 = reader.GetFloat(14),
					Bang		 = reader.GetFloat(15),
					Hit		 = reader.GetFloat(16),
					Volt		 = reader.GetFloat(17),
					Deepening		 = reader.GetFloat(18),
					Shallowing		 = reader.GetFloat(19),
					Health_growth		 = reader.GetFloat(20),
					Attack_growth		 = reader.GetFloat(21),
					Guard_growth		 = reader.GetFloat(22),
					Pierce_growth		 = reader.GetFloat(23),
					Puncture_growth		 = reader.GetFloat(24),
					Add_atk_growth		 = reader.GetFloat(25),
					Bang_growth		 = reader.GetFloat(26),
					Hit_growth		 = reader.GetFloat(27),
					Volt_growth		 = reader.GetFloat(28),
					Deepen_growth		 = reader.GetFloat(29),
					Shallow_growth		 = reader.GetFloat(30),
					Lv_rule		 = reader.GetInt32(31),
					Strengthen_rule		 = reader.GetInt32(32),
					Change_id		 = reader.GetInt32(33),
					Resolve_rule		 = reader.GetInt32(34),
					Icon		 = reader.GetInt32(35),
				};
				tmp.Add(module.Id, module);
			}
		});
		return tmp;
	}
}
