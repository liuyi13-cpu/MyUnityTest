using System.Collections.Generic; 

/// <summary>
/// THIS SOURCE CODE WAS AUTO-GENERATED BY TOOL, DO NOT MODIFY IT!
/// </summary>
public class DB_Skill_theory : IDB_BaseInt
{
	const string SQL = @"select _index, id, level_rule, skill1, skill2, skill3, skill4, skill5, skill6, skill7, skill8, skill9, default_skill from conf_skill_theory";

	/// <summary>
	///序号
	/// </summary>
	public int _index { get; set; }
	/// <summary>
	///学说ID
	/// </summary>
	public int Id { get; set; }
	/// <summary>
	///升级规则
	/// </summary>
	public int Level_rule { get; set; }
	/// <summary>
	///技能1
	/// </summary>
	public int Skill1 { get; set; }
	/// <summary>
	///技能2
	/// </summary>
	public int Skill2 { get; set; }
	/// <summary>
	///技能3
	/// </summary>
	public int Skill3 { get; set; }
	/// <summary>
	///技能4
	/// </summary>
	public int Skill4 { get; set; }
	/// <summary>
	///技能5
	/// </summary>
	public int Skill5 { get; set; }
	/// <summary>
	///技能6
	/// </summary>
	public int Skill6 { get; set; }
	/// <summary>
	///技能7
	/// </summary>
	public int Skill7 { get; set; }
	/// <summary>
	///技能8
	/// </summary>
	public int Skill8 { get; set; }
	/// <summary>
	///技能9
	/// </summary>
	public int Skill9 { get; set; }
	/// <summary>
	///默认技能
	/// </summary>
	public int Default_skill { get; set; }

	static Dictionary<int, IDB_BaseInt> LoadDB()
	{
		Dictionary<int, IDB_BaseInt> tmp = new Dictionary<int, IDB_BaseInt>();
		DBHelper.Instance.Query(SQL, (reader) =>
		{
			if (reader == null) return;

			while (reader.Read())
			{
				DB_Skill_theory module = new DB_Skill_theory()
				{
					_index		 = reader.GetInt32(0),
					Id		 = reader.GetInt32(1),
					Level_rule		 = reader.GetInt32(2),
					Skill1		 = reader.GetInt32(3),
					Skill2		 = reader.GetInt32(4),
					Skill3		 = reader.GetInt32(5),
					Skill4		 = reader.GetInt32(6),
					Skill5		 = reader.GetInt32(7),
					Skill6		 = reader.GetInt32(8),
					Skill7		 = reader.GetInt32(9),
					Skill8		 = reader.GetInt32(10),
					Skill9		 = reader.GetInt32(11),
					Default_skill		 = reader.GetInt32(12),
				};
				tmp.Add(module.Id, module);
			}
		});
		return tmp;
	}
}
