using System.Collections.Generic; 

/// <summary>
/// THIS SOURCE CODE WAS AUTO-GENERATED BY TOOL, DO NOT MODIFY IT!
/// </summary>
public class DB_Equip_part_level_rule : IDB_BaseInt
{
	const string SQL = @"select _index, id, exp1, exp2, exp3, exp4, exp5, money1, money2, money3, money4, money5 from conf_equip_part_level_rule";

	/// <summary>
	///序号
	/// </summary>
	public int _index { get; set; }
	/// <summary>
	///升级规则ID
	/// </summary>
	public int Id { get; set; }
	/// <summary>
	///升级所需经验系数1
	/// </summary>
	public float Exp1 { get; set; }
	/// <summary>
	///升级所需经验系数2
	/// </summary>
	public float Exp2 { get; set; }
	/// <summary>
	///升级所需经验系数3
	/// </summary>
	public float Exp3 { get; set; }
	/// <summary>
	///升级所需经验系数4
	/// </summary>
	public float Exp4 { get; set; }
	/// <summary>
	///升级所需经验系数5
	/// </summary>
	public float Exp5 { get; set; }
	/// <summary>
	///升级所需金钱系数1
	/// </summary>
	public float Money1 { get; set; }
	/// <summary>
	///升级所需金钱系数2
	/// </summary>
	public float Money2 { get; set; }
	/// <summary>
	///升级所需金钱系数3
	/// </summary>
	public float Money3 { get; set; }
	/// <summary>
	///升级所需金钱系数4
	/// </summary>
	public float Money4 { get; set; }
	/// <summary>
	///升级所需金钱系数5
	/// </summary>
	public float Money5 { get; set; }

	static Dictionary<int, IDB_BaseInt> LoadDB()
	{
		Dictionary<int, IDB_BaseInt> tmp = new Dictionary<int, IDB_BaseInt>();
		DBHelper.Instance.Query(SQL, (reader) =>
		{
			if (reader == null) return;

			while (reader.Read())
			{
				DB_Equip_part_level_rule module = new DB_Equip_part_level_rule()
				{
					_index		 = reader.GetInt32(0),
					Id		 = reader.GetInt32(1),
					Exp1		 = reader.GetFloat(2),
					Exp2		 = reader.GetFloat(3),
					Exp3		 = reader.GetFloat(4),
					Exp4		 = reader.GetFloat(5),
					Exp5		 = reader.GetFloat(6),
					Money1		 = reader.GetFloat(7),
					Money2		 = reader.GetFloat(8),
					Money3		 = reader.GetFloat(9),
					Money4		 = reader.GetFloat(10),
					Money5		 = reader.GetFloat(11),
				};
				tmp.Add(module.Id, module);
			}
		});
		return tmp;
	}
}
