using System.Collections.Generic; 

/// <summary>
/// THIS SOURCE CODE WAS AUTO-GENERATED BY TOOL, DO NOT MODIFY IT!
/// </summary>
public class DB_Rare_performance : IDB_BaseIntDouble
{
	const string SQL = @"select _index, frame_type, id, name, rare_type, R, G, B, commonder_rank_name, background_big_id, background_small_id, frame_id from conf_rare_performance";

	/// <summary>
	///序号
	/// </summary>
	public int _index { get; set; }
	/// <summary>
	///边框品质
	/// </summary>
	public int Frame_type { get; set; }
	/// <summary>
	///品质ID
	/// </summary>
	public int Id { get; set; }
	/// <summary>
	///品质名称
	/// </summary>
	public string Name { get; set; }
	/// <summary>
	///品质级别：1=白，2=绿，3=蓝，4=紫，5=橙
	/// </summary>
	public int Rare_type { get; set; }
	/// <summary>
	///R
	/// </summary>
	public float R { get; set; }
	/// <summary>
	///G
	/// </summary>
	public float G { get; set; }
	/// <summary>
	///B
	/// </summary>
	public float B { get; set; }
	/// <summary>
	///指挥官称谓
	/// </summary>
	public string Commonder_rank_name { get; set; }
	/// <summary>
	///大底图id
	/// </summary>
	public int Background_big_id { get; set; }
	/// <summary>
	///小底图id
	/// </summary>
	public int Background_small_id { get; set; }
	/// <summary>
	///边框ID
	/// </summary>
	public int Frame_id { get; set; }

	static Dictionary<int, Dictionary<int, IDB_BaseIntDouble>> LoadDB()
	{
		Dictionary<int, Dictionary<int, IDB_BaseIntDouble>> tmp = new Dictionary<int, Dictionary<int, IDB_BaseIntDouble>>();
		DBHelper.Instance.Query(SQL, (reader) =>
		{
			if (reader == null) return;

			while (reader.Read())
			{
				DB_Rare_performance module = new DB_Rare_performance()
				{
					_index		 = reader.GetInt32(0),
					Frame_type		 = reader.GetInt32(1),
					Id		 = reader.GetInt32(2),
					Name		 = reader.GetString(3),
					Rare_type		 = reader.GetInt32(4),
					R		 = reader.GetFloat(5),
					G		 = reader.GetFloat(6),
					B		 = reader.GetFloat(7),
					Commonder_rank_name		 = reader.GetString(8),
					Background_big_id		 = reader.GetInt32(9),
					Background_small_id		 = reader.GetInt32(10),
					Frame_id		 = reader.GetInt32(11),
				};
				if (!tmp.ContainsKey(module.Frame_type))
				{
					var tmpsub = new Dictionary<int, IDB_BaseIntDouble>();
					tmp.Add(module.Frame_type, tmpsub);
				}
				tmp[module.Frame_type].Add(module.Id, module);
			}
		});
		return tmp;
	}
}
