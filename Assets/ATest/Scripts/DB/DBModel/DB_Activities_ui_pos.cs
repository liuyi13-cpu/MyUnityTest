using System.Collections.Generic; 

/// <summary>
/// THIS SOURCE CODE WAS AUTO-GENERATED BY TOOL, DO NOT MODIFY IT!
/// </summary>
public class DB_Activities_ui_pos : IDB_BaseIntDouble
{
	const string SQL = @"select _index, activity_type, activity_id, comment, icon_type, icon_res_id from conf_activities_ui_pos";

	/// <summary>
	///序号
	/// </summary>
	public int _index { get; set; }
	/// <summary>
	///活动类型
	/// </summary>
	public int Activity_type { get; set; }
	/// <summary>
	///活动ID
	/// </summary>
	public int Activity_id { get; set; }
	/// <summary>
	///开发备注
	/// </summary>
	public string Comment { get; set; }
	/// <summary>
	///图标类型
	/// </summary>
	public int Icon_type { get; set; }
	/// <summary>
	///图标资源ID
	/// </summary>
	public int Icon_res_id { get; set; }

	static Dictionary<int, Dictionary<int, IDB_BaseIntDouble>> LoadDB()
	{
		Dictionary<int, Dictionary<int, IDB_BaseIntDouble>> tmp = new Dictionary<int, Dictionary<int, IDB_BaseIntDouble>>();
		DBHelper.Instance.Query(SQL, (reader) =>
		{
			if (reader == null) return;

			while (reader.Read())
			{
				DB_Activities_ui_pos module = new DB_Activities_ui_pos()
				{
					_index		 = reader.GetInt32(0),
					Activity_type		 = reader.GetInt32(1),
					Activity_id		 = reader.GetInt32(2),
					Comment		 = reader.GetString(3),
					Icon_type		 = reader.GetInt32(4),
					Icon_res_id		 = reader.GetInt32(5),
				};
				if (!tmp.ContainsKey(module.Activity_type))
				{
					var tmpsub = new Dictionary<int, IDB_BaseIntDouble>();
					tmp.Add(module.Activity_type, tmpsub);
				}
				tmp[module.Activity_type].Add(module.Activity_id, module);
			}
		});
		return tmp;
	}
}
