using System.Collections.Generic; 

/// <summary>
/// THIS SOURCE CODE WAS AUTO-GENERATED BY TOOL, DO NOT MODIFY IT!
/// </summary>
public class DB_Airport_reward : IDB_BaseIntDouble
{
	const string SQL = @"select _index, id, kill_num_low, kill_num, reward from conf_airport_reward";

	/// <summary>
	///序号
	/// </summary>
	public int _index { get; set; }
	/// <summary>
	///关卡ID
	/// </summary>
	public int Id { get; set; }
	/// <summary>
	///击杀数量下限
	/// </summary>
	public int Kill_num_low { get; set; }
	/// <summary>
	///击杀数量上限
	/// </summary>
	public int Kill_num { get; set; }
	/// <summary>
	///奖励
	/// </summary>
	public int Reward { get; set; }

	static Dictionary<int, Dictionary<int, IDB_BaseIntDouble>> LoadDB()
	{
		Dictionary<int, Dictionary<int, IDB_BaseIntDouble>> tmp = new Dictionary<int, Dictionary<int, IDB_BaseIntDouble>>();
		DBHelper.Instance.Query(SQL, (reader) =>
		{
			if (reader == null) return;

			while (reader.Read())
			{
				DB_Airport_reward module = new DB_Airport_reward()
				{
					_index		 = reader.GetInt32(0),
					Id		 = reader.GetInt32(1),
					Kill_num_low		 = reader.GetInt32(2),
					Kill_num		 = reader.GetInt32(3),
					Reward		 = reader.GetInt32(4),
				};
				if (!tmp.ContainsKey(module.Id))
				{
					var tmpsub = new Dictionary<int, IDB_BaseIntDouble>();
					tmp.Add(module.Id, tmpsub);
				}
				tmp[module.Id].Add(module.Kill_num_low, module);
			}
		});
		return tmp;
	}
}
