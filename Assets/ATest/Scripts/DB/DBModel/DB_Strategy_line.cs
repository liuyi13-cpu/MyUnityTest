using System.Collections.Generic; 

/// <summary>
/// THIS SOURCE CODE WAS AUTO-GENERATED BY TOOL, DO NOT MODIFY IT!
/// </summary>
public class DB_Strategy_line : IDB_BaseInt
{
	const string SQL = @"select _index, sector_id, comment, status, strategy_zone, strategy_random_num, strategy_random_time, strategy_random_stay, boss_battle_id, level_min, level_max, unlockline, unlockcondition, titile, instructions, money_cost, cost1_id, material1cost, cost2_id, material2cost, cost3_id, material3cost, explore_id, line_map_set, line_map from conf_strategy_line";

	/// <summary>
	///序号
	/// </summary>
	public int _index { get; set; }
	/// <summary>
	///防线id
	/// </summary>
	public int Sector_id { get; set; }
	/// <summary>
	///开发备注
	/// </summary>
	public string Comment { get; set; }
	/// <summary>
	///初始状态1=锁定，2=开放
	/// </summary>
	public int Status { get; set; }
	/// <summary>
	///下属战区
	/// </summary>
	public string Strategy_zone { get; set; }
	/// <summary>
	///防线内包含野怪数量
	/// </summary>
	public int Strategy_random_num { get; set; }
	/// <summary>
	///野怪刷新时间单位：秒
	/// </summary>
	public int Strategy_random_time { get; set; }
	/// <summary>
	///野怪刷新位置
	/// </summary>
	public string Strategy_random_stay { get; set; }
	/// <summary>
	///boss战id（从表conf_strategy_line_boss_public.xlsx中读取）
	/// </summary>
	public int Boss_battle_id { get; set; }
	/// <summary>
	///推荐等级下限
	/// </summary>
	public int Level_min { get; set; }
	/// <summary>
	///推荐等级上限
	/// </summary>
	public int Level_max { get; set; }
	/// <summary>
	///占领后解锁防线id
	/// </summary>
	public string Unlockline { get; set; }
	/// <summary>
	///解锁条件
	/// </summary>
	public string Unlockcondition { get; set; }
	/// <summary>
	///标题
	/// </summary>
	public string Titile { get; set; }
	/// <summary>
	///说明
	/// </summary>
	public string Instructions { get; set; }
	/// <summary>
	///解锁消耗金钱
	/// </summary>
	public int Money_cost { get; set; }
	/// <summary>
	///消耗1id读conf_material_public.xlsx
	/// </summary>
	public int Cost1_id { get; set; }
	/// <summary>
	///消耗1001数量
	/// </summary>
	public int Material1cost { get; set; }
	/// <summary>
	///消耗2id读conf_material_public.xlsx
	/// </summary>
	public int Cost2_id { get; set; }
	/// <summary>
	///消耗1002数量
	/// </summary>
	public int Material2cost { get; set; }
	/// <summary>
	///消耗3id读conf_material_public.xlsx
	/// </summary>
	public int Cost3_id { get; set; }
	/// <summary>
	///消耗1003数量
	/// </summary>
	public int Material3cost { get; set; }
	/// <summary>
	///探索池
	/// </summary>
	public string Explore_id { get; set; }
	/// <summary>
	///2级界面使用地图地址
	/// </summary>
	public string Line_map_set { get; set; }
	/// <summary>
	///防线二级界面使用地图profeb（1：内陆 2：下沿海 3：左沿海 4：内陆2）
	/// </summary>
	public string Line_map { get; set; }

	static Dictionary<int, IDB_BaseInt> LoadDB()
	{
		Dictionary<int, IDB_BaseInt> tmp = new Dictionary<int, IDB_BaseInt>();
		DBHelper.Instance.Query(SQL, (reader) =>
		{
			if (reader == null) return;

			while (reader.Read())
			{
				DB_Strategy_line module = new DB_Strategy_line()
				{
					_index		 = reader.GetInt32(0),
					Sector_id		 = reader.GetInt32(1),
					Comment		 = reader.GetString(2),
					Status		 = reader.GetInt32(3),
					Strategy_zone		 = reader.GetString(4),
					Strategy_random_num		 = reader.GetInt32(5),
					Strategy_random_time		 = reader.GetInt32(6),
					Strategy_random_stay		 = reader.GetString(7),
					Boss_battle_id		 = reader.GetInt32(8),
					Level_min		 = reader.GetInt32(9),
					Level_max		 = reader.GetInt32(10),
					Unlockline		 = reader.GetString(11),
					Unlockcondition		 = reader.GetString(12),
					Titile		 = reader.GetString(13),
					Instructions		 = reader.GetString(14),
					Money_cost		 = reader.GetInt32(15),
					Cost1_id		 = reader.GetInt32(16),
					Material1cost		 = reader.GetInt32(17),
					Cost2_id		 = reader.GetInt32(18),
					Material2cost		 = reader.GetInt32(19),
					Cost3_id		 = reader.GetInt32(20),
					Material3cost		 = reader.GetInt32(21),
					Explore_id		 = reader.GetString(22),
					Line_map_set		 = reader.GetString(23),
					Line_map		 = reader.GetString(24),
				};
				tmp.Add(module.Sector_id, module);
			}
		});
		return tmp;
	}
}
