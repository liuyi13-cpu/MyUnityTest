using System.Collections.Generic; 

/// <summary>
/// THIS SOURCE CODE WAS AUTO-GENERATED BY TOOL, DO NOT MODIFY IT!
/// </summary>
public class DB_Battle : IDB_BaseInt
{
	const string SQL = @"select _index, id, name, title, description, task_object, type, battle_box, type_name, attach_id, enemy_commander_show, enemy_show, prop_show, consume, reward, drop1_id, drop2_id, drop3_id, drop4_id, drop5_id, limit_count, map, priority, campaign_id, time_limit, follow_npc from conf_battle";

	/// <summary>
	///序号
	/// </summary>
	public int _index { get; set; }
	/// <summary>
	///关卡ID
	/// </summary>
	public int Id { get; set; }
	/// <summary>
	///关卡名称
	/// </summary>
	public string Name { get; set; }
	/// <summary>
	///关卡名称
	/// </summary>
	public string Title { get; set; }
	/// <summary>
	///任务说明
	/// </summary>
	public string Description { get; set; }
	/// <summary>
	///任务目标
	/// </summary>
	public string Task_object { get; set; }
	/// <summary>
	///关卡类型
	/// </summary>
	public int Type { get; set; }
	/// <summary>
	///关卡箱子奖励id
	/// </summary>
	public int Battle_box { get; set; }
	/// <summary>
	///关卡类型名字
	/// </summary>
	public string Type_name { get; set; }
	/// <summary>
	///归属id
	/// </summary>
	public int Attach_id { get; set; }
	/// <summary>
	///敌军指挥官展示。此列填写指挥官id，客户端需要根据指挥官id在conf_commander_attr找到对应的图片显示
	/// </summary>
	public int Enemy_commander_show { get; set; }
	/// <summary>
	///敌军展示.此列填写坦克id。客户端需要从conf_npc_tank中读取对应的坦克图片
	/// </summary>
	public string Enemy_show { get; set; }
	/// <summary>
	///掉落展示
	/// </summary>
	public int Prop_show { get; set; }
	/// <summary>
	///消耗组
	/// </summary>
	public int Consume { get; set; }
	/// <summary>
	///奖励组
	/// </summary>
	public int Reward { get; set; }
	/// <summary>
	///掉落组ID1
	/// </summary>
	public int Drop1_id { get; set; }
	/// <summary>
	///掉落组ID2
	/// </summary>
	public int Drop2_id { get; set; }
	/// <summary>
	///掉落组ID3
	/// </summary>
	public int Drop3_id { get; set; }
	/// <summary>
	///掉落组ID4
	/// </summary>
	public int Drop4_id { get; set; }
	/// <summary>
	///掉落组ID5
	/// </summary>
	public int Drop5_id { get; set; }
	/// <summary>
	///挑战次数限制
	/// </summary>
	public int Limit_count { get; set; }
	/// <summary>
	///地图
	/// </summary>
	public string Map { get; set; }
	/// <summary>
	///优先级
	/// </summary>
	public int Priority { get; set; }
	/// <summary>
	///战役id
	/// </summary>
	public int Campaign_id { get; set; }
	/// <summary>
	///时间限制
	/// </summary>
	public float Time_limit { get; set; }
	/// <summary>
	///跟随NPC
	/// </summary>
	public int Follow_npc { get; set; }

	static Dictionary<int, IDB_BaseInt> LoadDB()
	{
		Dictionary<int, IDB_BaseInt> tmp = new Dictionary<int, IDB_BaseInt>();
		DBHelper.Instance.Query(SQL, (reader) =>
		{
			if (reader == null) return;

			while (reader.Read())
			{
				DB_Battle module = new DB_Battle()
				{
					_index		 = reader.GetInt32(0),
					Id		 = reader.GetInt32(1),
					Name		 = reader.GetString(2),
					Title		 = reader.GetString(3),
					Description		 = reader.GetString(4),
					Task_object		 = reader.GetString(5),
					Type		 = reader.GetInt32(6),
					Battle_box		 = reader.GetInt32(7),
					Type_name		 = reader.GetString(8),
					Attach_id		 = reader.GetInt32(9),
					Enemy_commander_show		 = reader.GetInt32(10),
					Enemy_show		 = reader.GetString(11),
					Prop_show		 = reader.GetInt32(12),
					Consume		 = reader.GetInt32(13),
					Reward		 = reader.GetInt32(14),
					Drop1_id		 = reader.GetInt32(15),
					Drop2_id		 = reader.GetInt32(16),
					Drop3_id		 = reader.GetInt32(17),
					Drop4_id		 = reader.GetInt32(18),
					Drop5_id		 = reader.GetInt32(19),
					Limit_count		 = reader.GetInt32(20),
					Map		 = reader.GetString(21),
					Priority		 = reader.GetInt32(22),
					Campaign_id		 = reader.GetInt32(23),
					Time_limit		 = reader.GetFloat(24),
					Follow_npc		 = reader.GetInt32(25),
				};
				tmp.Add(module.Id, module);
			}
		});
		return tmp;
	}
}
