using System.Collections.Generic; 

/// <summary>
/// THIS SOURCE CODE WAS AUTO-GENERATED BY TOOL, DO NOT MODIFY IT!
/// </summary>
public class DB_Strategy_arsenal : IDB_BaseIntDouble
{
	const string SQL = @"select _index, type_id, index_list, type_txt, comment, props_id, lv_limit, make_time, iteam1_type, iteam1_id, iteam1_num, iteam2_type, iteam2_id, iteam2_num, iteam3_type, iteam3_id, iteam3_num, iteam4_type, iteam4_id, iteam4_num from conf_strategy_arsenal";

	/// <summary>
	///序号
	/// </summary>
	public int _index { get; set; }
	/// <summary>
	///类型
	/// </summary>
	public int Type_id { get; set; }
	/// <summary>
	///优先级
	/// </summary>
	public int Index_list { get; set; }
	/// <summary>
	///类型名称
	/// </summary>
	public string Type_txt { get; set; }
	/// <summary>
	///开发备注
	/// </summary>
	public string Comment { get; set; }
	/// <summary>
	///道具id（从表conf_props_public.xlsx中读取）
	/// </summary>
	public int Props_id { get; set; }
	/// <summary>
	///制造所需物品的兵工厂等级限制
	/// </summary>
	public int Lv_limit { get; set; }
	/// <summary>
	///建造时间（单位秒）
	/// </summary>
	public int Make_time { get; set; }
	/// <summary>
	///道具1类型(1.道具，4.四类资源，101游戏币：id=0，124战略大作战：1d=0)
	/// </summary>
	public int Iteam1_type { get; set; }
	/// <summary>
	///道具1id
	/// </summary>
	public int Iteam1_id { get; set; }
	/// <summary>
	///道具1数量
	/// </summary>
	public int Iteam1_num { get; set; }
	/// <summary>
	///道具2类型(1.道具，4.四类资源，101游戏币：id=0，124战略大作战：1d=0)
	/// </summary>
	public int Iteam2_type { get; set; }
	/// <summary>
	///道具2id
	/// </summary>
	public int Iteam2_id { get; set; }
	/// <summary>
	///道具2数量
	/// </summary>
	public int Iteam2_num { get; set; }
	/// <summary>
	///道具3类型(1.道具，4.四类资源，101游戏币：id=0，124战略大作战：1d=0)
	/// </summary>
	public int Iteam3_type { get; set; }
	/// <summary>
	///道具3id
	/// </summary>
	public int Iteam3_id { get; set; }
	/// <summary>
	///道具3数量
	/// </summary>
	public int Iteam3_num { get; set; }
	/// <summary>
	///道具4类型(1.道具，4.四类资源，101游戏币：id=0，124战略大作战：1d=0)
	/// </summary>
	public int Iteam4_type { get; set; }
	/// <summary>
	///道具4id
	/// </summary>
	public int Iteam4_id { get; set; }
	/// <summary>
	///道具4数量
	/// </summary>
	public int Iteam4_num { get; set; }

	static Dictionary<int, Dictionary<int, IDB_BaseIntDouble>> LoadDB()
	{
		Dictionary<int, Dictionary<int, IDB_BaseIntDouble>> tmp = new Dictionary<int, Dictionary<int, IDB_BaseIntDouble>>();
		DBHelper.Instance.Query(SQL, (reader) =>
		{
			if (reader == null) return;

			while (reader.Read())
			{
				DB_Strategy_arsenal module = new DB_Strategy_arsenal()
				{
					_index		 = reader.GetInt32(0),
					Type_id		 = reader.GetInt32(1),
					Index_list		 = reader.GetInt32(2),
					Type_txt		 = reader.GetString(3),
					Comment		 = reader.GetString(4),
					Props_id		 = reader.GetInt32(5),
					Lv_limit		 = reader.GetInt32(6),
					Make_time		 = reader.GetInt32(7),
					Iteam1_type		 = reader.GetInt32(8),
					Iteam1_id		 = reader.GetInt32(9),
					Iteam1_num		 = reader.GetInt32(10),
					Iteam2_type		 = reader.GetInt32(11),
					Iteam2_id		 = reader.GetInt32(12),
					Iteam2_num		 = reader.GetInt32(13),
					Iteam3_type		 = reader.GetInt32(14),
					Iteam3_id		 = reader.GetInt32(15),
					Iteam3_num		 = reader.GetInt32(16),
					Iteam4_type		 = reader.GetInt32(17),
					Iteam4_id		 = reader.GetInt32(18),
					Iteam4_num		 = reader.GetInt32(19),
				};
				if (!tmp.ContainsKey(module.Type_id))
				{
					var tmpsub = new Dictionary<int, IDB_BaseIntDouble>();
					tmp.Add(module.Type_id, tmpsub);
				}
				tmp[module.Type_id].Add(module.Index_list, module);
			}
		});
		return tmp;
	}
}
