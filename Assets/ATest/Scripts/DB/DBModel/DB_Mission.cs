using System.Collections.Generic; 

/// <summary>
/// THIS SOURCE CODE WAS AUTO-GENERATED BY TOOL, DO NOT MODIFY IT!
/// </summary>
public class DB_Mission : IDB_BaseInt
{
	const string SQL = @"select _index, id, pre_id, comment, title, description, task, task_type, task_num, daily, open, open_content, reward, rank, goto_type, goto_id, icon_id from conf_mission";

	/// <summary>
	///序号
	/// </summary>
	public int _index { get; set; }
	/// <summary>
	///任务id
	/// </summary>
	public int Id { get; set; }
	/// <summary>
	///前置任务id
	/// </summary>
	public int Pre_id { get; set; }
	/// <summary>
	///开发备注
	/// </summary>
	public string Comment { get; set; }
	/// <summary>
	///任务名字,取对应字典号
	/// </summary>
	public string Title { get; set; }
	/// <summary>
	///描述文本，取对应字典号
	/// </summary>
	public string Description { get; set; }
	/// <summary>
	///任务条件，在此处定义：1=在指定关卡获胜；2=在制定数量的战役获胜；3=进行坦克建造；4=参加抽奖；5=在指定活动战斗中获胜；6=进行坦克升级操作；7=进行坦克强化操作；8=进行装备升级操作；9=进行装备改良操作；10=进行指挥官升级操作；11=玩家达到指定等级；12=玩家拥有一定数量的坦克；13=玩家拥有一定数量的大于等于指定品质的坦克；14=玩家拥有一定数量的大于等于指定星级的坦克；15=玩家拥有一定数量的大于等于指定品质的装备；16=进行坦克升星的操作；17=进行装备升星的操作；18=玩家拥有一定数量的大于等于指定星级的装备；
	/// </summary>
	public int Task { get; set; }
	/// <summary>
	///任务需求类型与任务条件相关的定义，具体内容参考sheet2
	/// </summary>
	public int Task_type { get; set; }
	/// <summary>
	///需求数量
	/// </summary>
	public int Task_num { get; set; }
	/// <summary>
	///是否日常用于区分该任务出现在主线任务界面还是日常任务界面.2主线；3日常；4成就。
	/// </summary>
	public int Daily { get; set; }
	/// <summary>
	///开启条件1=玩家等级达到指定等级；2=玩家通过战役的某个关卡；当开启条件为-1时，该任务无条件开放
	/// </summary>
	public int Open { get; set; }
	/// <summary>
	///开启条件内容开启条件为1时，此处为指定等级；开启条件为2时，此处为战役关卡id
	/// </summary>
	public int Open_content { get; set; }
	/// <summary>
	///奖励从conf_reward中读取
	/// </summary>
	public int Reward { get; set; }
	/// <summary>
	///排序任务在任务列表界面的显示顺序，数字越小越靠上
	/// </summary>
	public int Rank { get; set; }
	/// <summary>
	///跳转目标类型1=战役界面；2=车库界面；3=指定活动界面；4=坦克制造界面；5=指挥官军营界面；6=抽奖界面；
	/// </summary>
	public int Goto_type { get; set; }
	/// <summary>
	///跳转目标Id1=霸王行动；2=龙骑兵行动；3=巴巴罗萨计划；4=蓝色行动；31=雷霆对决；21=战略大作战
	/// </summary>
	public int Goto_id { get; set; }
	/// <summary>
	///任务图标ID
	/// </summary>
	public int Icon_id { get; set; }

	static Dictionary<int, IDB_BaseInt> LoadDB()
	{
		Dictionary<int, IDB_BaseInt> tmp = new Dictionary<int, IDB_BaseInt>();
		DBHelper.Instance.Query(SQL, (reader) =>
		{
			if (reader == null) return;

			while (reader.Read())
			{
				DB_Mission module = new DB_Mission()
				{
					_index		 = reader.GetInt32(0),
					Id		 = reader.GetInt32(1),
					Pre_id		 = reader.GetInt32(2),
					Comment		 = reader.GetString(3),
					Title		 = reader.GetString(4),
					Description		 = reader.GetString(5),
					Task		 = reader.GetInt32(6),
					Task_type		 = reader.GetInt32(7),
					Task_num		 = reader.GetInt32(8),
					Daily		 = reader.GetInt32(9),
					Open		 = reader.GetInt32(10),
					Open_content		 = reader.GetInt32(11),
					Reward		 = reader.GetInt32(12),
					Rank		 = reader.GetInt32(13),
					Goto_type		 = reader.GetInt32(14),
					Goto_id		 = reader.GetInt32(15),
					Icon_id		 = reader.GetInt32(16),
				};
				tmp.Add(module.Id, module);
			}
		});
		return tmp;
	}
}
