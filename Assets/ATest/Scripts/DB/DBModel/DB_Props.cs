using System.Collections.Generic; 

/// <summary>
/// THIS SOURCE CODE WAS AUTO-GENERATED BY TOOL, DO NOT MODIFY IT!
/// </summary>
public class DB_Props : IDB_BaseInt
{
	const string SQL = @"select _index, id, name, comment, description, type, prop_level, rare, usable, get, get_id, get_num, marketable, price, package, ui_sprite_id, drop_text, drop_dungeon1, drop_dungeon2, drop_dungeon3, compose_id, commander_level, tank_level, country, series from conf_props";

	/// <summary>
	///序号
	/// </summary>
	public int _index { get; set; }
	/// <summary>
	///道具ID
	/// </summary>
	public int Id { get; set; }
	/// <summary>
	///道具名称
	/// </summary>
	public string Name { get; set; }
	/// <summary>
	///道具描述
	/// </summary>
	public string Comment { get; set; }
	/// <summary>
	///说明文字
	/// </summary>
	public string Description { get; set; }
	/// <summary>
	///道具类型：见sheet1
	/// </summary>
	public int Type { get; set; }
	/// <summary>
	///道具等级
	/// </summary>
	public int Prop_level { get; set; }
	/// <summary>
	///稀有度
	/// </summary>
	public int Rare { get; set; }
	/// <summary>
	///可使用0：不可使用，1：可使用；2：可批量使用；
	/// </summary>
	public int Usable { get; set; }
	/// <summary>
	///使用后获得物1：道具，2：装备，203：坦克经验，101：游戏货币；102：充值货币；4：材料；121：燃油；8：随机道具;9:掉落道具；
	/// </summary>
	public int Get { get; set; }
	/// <summary>
	///使用后获得物ID
	/// </summary>
	public int Get_id { get; set; }
	/// <summary>
	///使用后获得数量
	/// </summary>
	public int Get_num { get; set; }
	/// <summary>
	///可出售
	/// </summary>
	public int Marketable { get; set; }
	/// <summary>
	///出售价格
	/// </summary>
	public int Price { get; set; }
	/// <summary>
	///堆叠上限
	/// </summary>
	public int Package { get; set; }
	/// <summary>
	///图标
	/// </summary>
	public int Ui_sprite_id { get; set; }
	/// <summary>
	///掉落说明
	/// </summary>
	public string Drop_text { get; set; }
	/// <summary>
	///掉落索引1此处为道具的掉落关卡id，必须是可重复攻打的战役关卡id
	/// </summary>
	public int Drop_dungeon1 { get; set; }
	/// <summary>
	///掉落索引2
	/// </summary>
	public int Drop_dungeon2 { get; set; }
	/// <summary>
	///掉落索引3
	/// </summary>
	public int Drop_dungeon3 { get; set; }
	/// <summary>
	///合成id
	/// </summary>
	public int Compose_id { get; set; }
	/// <summary>
	///指挥官使用等级
	/// </summary>
	public int Commander_level { get; set; }
	/// <summary>
	///坦克使用等级
	/// </summary>
	public int Tank_level { get; set; }
	/// <summary>
	///坦克使用系别
	/// </summary>
	public int Country { get; set; }
	/// <summary>
	///坦克使用类型
	/// </summary>
	public int Series { get; set; }

	static Dictionary<int, IDB_BaseInt> LoadDB()
	{
		Dictionary<int, IDB_BaseInt> tmp = new Dictionary<int, IDB_BaseInt>();
		DBHelper.Instance.Query(SQL, (reader) =>
		{
			if (reader == null) return;

			while (reader.Read())
			{
				DB_Props module = new DB_Props()
				{
					_index		 = reader.GetInt32(0),
					Id		 = reader.GetInt32(1),
					Name		 = reader.GetString(2),
					Comment		 = reader.GetString(3),
					Description		 = reader.GetString(4),
					Type		 = reader.GetInt32(5),
					Prop_level		 = reader.GetInt32(6),
					Rare		 = reader.GetInt32(7),
					Usable		 = reader.GetInt32(8),
					Get		 = reader.GetInt32(9),
					Get_id		 = reader.GetInt32(10),
					Get_num		 = reader.GetInt32(11),
					Marketable		 = reader.GetInt32(12),
					Price		 = reader.GetInt32(13),
					Package		 = reader.GetInt32(14),
					Ui_sprite_id		 = reader.GetInt32(15),
					Drop_text		 = reader.GetString(16),
					Drop_dungeon1		 = reader.GetInt32(17),
					Drop_dungeon2		 = reader.GetInt32(18),
					Drop_dungeon3		 = reader.GetInt32(19),
					Compose_id		 = reader.GetInt32(20),
					Commander_level		 = reader.GetInt32(21),
					Tank_level		 = reader.GetInt32(22),
					Country		 = reader.GetInt32(23),
					Series		 = reader.GetInt32(24),
				};
				tmp.Add(module.Id, module);
			}
		});
		return tmp;
	}
}
