using System.Collections.Generic; 

/// <summary>
/// THIS SOURCE CODE WAS AUTO-GENERATED BY TOOL, DO NOT MODIFY IT!
/// </summary>
public class DB_Strategy_action : IDB_BaseInt
{
	const string SQL = @"select _index, id, comment, action_title, action_txt, action_leader_limit, action_leader_limit_num, action_tank1_type, action_tank2_type, action_tank3_type, action_tank4_type, action_tank5_type, reward_id, sp_reward_id, reward_chance, line, battle_require, action_time from conf_strategy_action";

	/// <summary>
	///序号
	/// </summary>
	public int _index { get; set; }
	/// <summary>
	///军事行动id
	/// </summary>
	public int Id { get; set; }
	/// <summary>
	///开发备注
	/// </summary>
	public string Comment { get; set; }
	/// <summary>
	///行动标题
	/// </summary>
	public string Action_title { get; set; }
	/// <summary>
	///行动说明
	/// </summary>
	public string Action_txt { get; set; }
	/// <summary>
	///指挥官限制（-1：无，1：限制等级，2限至战术）
	/// </summary>
	public int Action_leader_limit { get; set; }
	/// <summary>
	///限制值
	/// </summary>
	public int Action_leader_limit_num { get; set; }
	/// <summary>
	///限制第1辆坦克坦克类别(conf_tank_attr_public.xlsx表中series)
	/// </summary>
	public int Action_tank1_type { get; set; }
	/// <summary>
	///限制第2辆坦克坦克类别(conf_tank_attr_public.xlsx表中series)
	/// </summary>
	public int Action_tank2_type { get; set; }
	/// <summary>
	///限制第3辆坦克坦克类别(conf_tank_attr_public.xlsx表中series)
	/// </summary>
	public int Action_tank3_type { get; set; }
	/// <summary>
	///限制第4辆坦克坦克类别(conf_tank_attr_public.xlsx表中series)
	/// </summary>
	public int Action_tank4_type { get; set; }
	/// <summary>
	///限制第5辆坦克坦克类别(conf_tank_attr_public.xlsx表中series)
	/// </summary>
	public int Action_tank5_type { get; set; }
	/// <summary>
	///普通奖励
	/// </summary>
	public int Reward_id { get; set; }
	/// <summary>
	///额外奖励
	/// </summary>
	public int Sp_reward_id { get; set; }
	/// <summary>
	///额外奖励触发概率
	/// </summary>
	public int Reward_chance { get; set; }
	/// <summary>
	///所属防线
	/// </summary>
	public int Line { get; set; }
	/// <summary>
	///战力要求
	/// </summary>
	public int Battle_require { get; set; }
	/// <summary>
	///行动时间（单位：秒）
	/// </summary>
	public int Action_time { get; set; }

	static Dictionary<int, IDB_BaseInt> LoadDB()
	{
		Dictionary<int, IDB_BaseInt> tmp = new Dictionary<int, IDB_BaseInt>();
		DBHelper.Instance.Query(SQL, (reader) =>
		{
			if (reader == null) return;

			while (reader.Read())
			{
				DB_Strategy_action module = new DB_Strategy_action()
				{
					_index		 = reader.GetInt32(0),
					Id		 = reader.GetInt32(1),
					Comment		 = reader.GetString(2),
					Action_title		 = reader.GetString(3),
					Action_txt		 = reader.GetString(4),
					Action_leader_limit		 = reader.GetInt32(5),
					Action_leader_limit_num		 = reader.GetInt32(6),
					Action_tank1_type		 = reader.GetInt32(7),
					Action_tank2_type		 = reader.GetInt32(8),
					Action_tank3_type		 = reader.GetInt32(9),
					Action_tank4_type		 = reader.GetInt32(10),
					Action_tank5_type		 = reader.GetInt32(11),
					Reward_id		 = reader.GetInt32(12),
					Sp_reward_id		 = reader.GetInt32(13),
					Reward_chance		 = reader.GetInt32(14),
					Line		 = reader.GetInt32(15),
					Battle_require		 = reader.GetInt32(16),
					Action_time		 = reader.GetInt32(17),
				};
				tmp.Add(module.Id, module);
			}
		});
		return tmp;
	}
}
